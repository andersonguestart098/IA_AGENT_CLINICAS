generator client {
  provider = "prisma-client-py"
  interface = "asyncio"  // Mudado de "sync" para "asyncio"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Feedback {
  id                      Int      @id @default(autoincrement())
  question                String
  answer                  String
  feedback                String
  acerto                  Boolean  @default(false)
  usada_para_treinamento  Boolean  @default(false)
  timestamp               DateTime @default(now())
  origemPlanta            String?
  contextoUsuario         String?
  knowledgeBaseId         Int?
  knowledgeBase           KnowledgeBase? @relation(fields: [knowledgeBaseId], references: [id])
}

model KnowledgeBase {
  id        Int         @id @default(autoincrement())
  origem    String
  conteudo  String
  embedding String?     
  timestamp DateTime    @default(now())
  feedbacks Feedback[]
}

model Metricas {
  id              Int      @id @default(autoincrement())
  totalFeedbacks  Int
  acertos         Int
  taxaAcerto      Float
  usadosTreino    Int
  percentualUsado Float
  criadoEm        DateTime @default(now())
}

model Ocorrencia {
  id        Int      @id @default(autoincrement())
  tipo      String   
  mensagem  String
  userId    String
  criadoEm  DateTime @default(now())
}

model Usuario {
  id         String   @id @default(cuid())
  nome       String
  email      String   @unique
  senhaHash  String
  criadoEm   DateTime @default(now())
  sessoes    Sessao[]
}

model Sessao {
  id        String   @id @default(cuid())
  token     String   @unique
  usuarioId String
  criadoEm  DateTime @default(now())

  usuario   Usuario @relation(fields: [usuarioId], references: [id])
}

model FluxoConversa {
  id            Int      @id @default(autoincrement())
  telefone      String
  sessionId     String
  userId        String
  etapaAtual    String
  dadosParciais String   // hist√≥rico completo da conversa
  pedido        String   @default("[]") // novo campo: lista JSON dos itens pedidos
  tipoFluxo     String
  status        String   @default("em_andamento")
  criadoEm      DateTime @default(now())
}



